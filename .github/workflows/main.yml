name: Build freqmon with custom rtl-sdr

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    # Установка MSYS2 для Windows (включает MinGW)
    - name: Setup MSYS2 (Windows)
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: >-
          base-devel
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-gcc-libs
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-libusb
          mingw-w64-x86_64-SDL2
          mingw-w64-x86_64-SDL2_ttf
          git
          mingw-w64-x86_64-make
          autoconf
          automake-wrapper
          automake1.16
          libtool
        update: true

    # Поиск и установка liquid-dsp и kissfft через pacman
    - name: Find and install DSP libraries (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        # Поиск доступных пакетов
        echo "Searching for available packages..."
        pacman -Ss kissfft || echo "kissfft not found in repos"
        pacman -Ss liquid-dsp || echo "liquid-dsp not found in repos"
        pacman -Ss liquid || echo "liquid not found in repos"
        
        # Попробуем установить из AUR или других источников
        echo "Installing kissfft from AUR helper if available..."
        pacman -S --noconfirm mingw-w64-x86_64-kissfft 2>/dev/null || echo "kissfft not available in main repos"
        
        echo "Installing liquid-dsp from AUR helper if available..."
        pacman -S --noconfirm mingw-w64-x86_64-liquid-dsp 2>/dev/null || echo "liquid-dsp not available in main repos"

    # Установка kissfft вручную через CMake (простая сборка)
    - name: Install kissfft manually (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        echo "Installing kissfft manually..."
        git clone https://github.com/mborgerding/kissfft.git
        cd kissfft
        # Простая компиляция без установки - просто копируем файлы
        gcc -c -O3 -fPIC -I. kiss_fft.c -o kiss_fft.o
        gcc -c -O3 -fPIC -I. tools/kiss_fftr.c -o kiss_fftr.o
        ar rcs libkissfft-float.a kiss_fft.o kiss_fftr.o
        cp libkissfft-float.a /mingw64/lib/
        cp kiss_fft.h /mingw64/include/
        cp tools/kiss_fftr.h /mingw64/include/

    # Установка liquid-dsp вручную (упрощенная сборка)
    - name: Install liquid-dsp manually (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        echo "Installing liquid-dsp manually..."
        git clone https://github.com/jgaeddert/liquid-dsp.git
        cd liquid-dsp
        # Используем простой Makefile если доступен, или компилируем напрямую
        if [ -f Makefile.in ]; then
          ./configure --prefix=/mingw64
          make -j$(nproc)
          make install
        else
          # Простая компиляция основных файлов
          mkdir -p src
          find . -name "*.c" -exec gcc -c -O3 -fPIC -Iinclude {} -o {}.o \;
          ar rcs libliquid.a *.o
          cp libliquid.a /mingw64/lib/
          cp -r include/liquid /mingw64/include/
        fi

    # Установка зависимостей для Linux
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libusb-1.0-0-dev libkissfft-dev libliquid-dev libsdl2-dev libsdl2-ttf-dev cmake pkg-config build-essential git

    # Загрузка и установка custom rtl-sdr (Linux)
    - name: Download and build custom rtl-sdr (Linux)
      if: runner.os == 'Linux'
      run: |
        git clone https://gitea.osmocom.org/sultanqasim/rtl-sdr.git
        cd rtl-sdr
        git checkout fast_retune
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local
        make -j$(nproc)
        sudo make install
        sudo ldconfig

    # Загрузка и установка custom rtl-sdr (Windows)
    - name: Download and build custom rtl-sdr (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        git clone https://gitea.osmocom.org/sultanqasim/rtl-sdr.git
        cd rtl-sdr
        git checkout fast_retune
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/mingw64
        make -j$(nproc)
        make install

    # Сборка freqmon (Linux)
    - name: Compile freqmon (Linux)
      if: runner.os == 'Linux'
      run: |
        g++ -O3 -march=native -ffast-math -std=c++23 -o freqmon freqmon.cpp \
          -lrtlsdr -lkissfft-float -lpthread -lliquid -fpermissive -lSDL2 -lSDL2_ttf \
          -I/usr/local/include -L/usr/local/lib

    # Сборка freqmon (Windows)
    - name: Compile freqmon (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        g++ -O3 -march=native -ffast-math -std=c++23 -o freqmon.exe freqmon.cpp \
          -lrtlsdr -lkissfft-float -lpthread -lliquid -fpermissive -lSDL2 -lSDL2_ttf \
          -I/mingw64/include -L/mingw64/lib

    # Загрузка артефактов
    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: freqmon-${{ runner.os }}
        path: |
          freqmon*
