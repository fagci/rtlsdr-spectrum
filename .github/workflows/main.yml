name: Build freqmon with custom rtl-sdr

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    # Установка MSYS2 для Windows (включает MinGW)
    - name: Setup MSYS2 (Windows)
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: >-
          base-devel
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-gcc-libs
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-libusb
          mingw-w64-x86_64-SDL2
          mingw-w64-x86_64-SDL2_ttf
          git
        update: true

    # Установка liquid-dsp вручную на Windows
    - name: Install liquid-dsp manually (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        git clone https://github.com/jgaeddert/liquid-dsp.git
        cd liquid-dsp
        ./bootstrap.sh
        ./configure --prefix=/mingw64
        make -j$(nproc)
        make install

    # Установка kissfft вручную на Windows
    - name: Install kissfft manually (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        git clone https://github.com/mborgerding/kissfft.git
        cd kissfft
        mkdir build && cd build
        cmake .. -G "MinGW Makefiles" -DCMAKE_INSTALL_PREFIX=/mingw64 -DKISSFFT_TOOLS=OFF -DKISSFFT_STATIC=OFF
        cmake --build . --config Release --target install

    # Установка зависимостей для Linux
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libusb-1.0-0-dev libkissfft-dev libliquid-dev libsdl2-dev libsdl2-ttf-dev cmake pkg-config build-essential git

    # Загрузка и установка custom rtl-sdr (Linux)
    - name: Download and build custom rtl-sdr (Linux)
      if: runner.os == 'Linux'
      run: |
        git clone https://gitea.osmocom.org/sultanqasim/rtl-sdr.git
        cd rtl-sdr
        git checkout fast_retune
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local
        make -j$(nproc)
        sudo make install
        sudo ldconfig

    # Загрузка и установка custom rtl-sdr (Windows)
    - name: Download and build custom rtl-sdr (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        git clone https://gitea.osmocom.org/sultanqasim/rtl-sdr.git
        cd rtl-sdr
        git checkout fast_retune
        mkdir build
        cd build
        cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/mingw64
        cmake --build . --config Release --target install

    # Сборка freqmon (Linux)
    - name: Compile freqmon (Linux)
      if: runner.os == 'Linux'
      run: |
        g++ -O3 -march=native -ffast-math -std=c++23 -o freqmon freqmon.cpp \
          -lrtlsdr -lkissfft-float -lpthread -lliquid -fpermissive -lSDL2 -lSDL2_ttf \
          -I/usr/local/include -L/usr/local/lib

    # Сборка freqmon (Windows)
    - name: Compile freqmon (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        g++ -O3 -march=native -ffast-math -std=c++23 -o freqmon.exe freqmon.cpp \
          -lrtlsdr -lkissfft-float -lpthread -lliquid -fpermissive -lSDL2 -lSDL2_ttf \
          -I/mingw64/include -L/mingw64/lib

    # Загрузка артефактов
    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: freqmon-${{ runner.os }}
        path: |
          freqmon*
